<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.papyrus.layouttool" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.papyrus.layouttool" id="org.eclipse.papyrus.layouttool" name="layouttool"/>
      </appInfo>
      <documentation>
         This extension point is use to add a class for an editor to collect information essential to apply layout like bounds of nodes, relationships .....
It&apos;s also used to add a layout area.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="client"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="client">
      <complexType>
         <attribute name="interface" type="string" use="required">
            <annotation>
               <documentation>
                  You must have a class which implement LayouttoolInterface to add an editor.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.layouttool.LayouttoolInterface"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="interfaceLayoutArea" type="string">
            <annotation>
               <documentation>
                  You must have a class which implements LayoutToolAreaInterface if you want to add a layout area in your editor. This attribute is optional.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.layouttool.LayoutToolAreaInterface"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Here is an example for Topcased editor :
&lt;extension point=&quot;org.eclipse.papyrus.layouttool&quot;&gt;
      &lt;client
            editor=&quot;org.topcased.modeler.editor.Modeler&quot;
            interface=&quot;org.topcased.subeditor.topcased.TopcasedSubEditor&quot;
            interfaceLayoutArea=&quot;org.topcased.subeditor.topcased.LayoutAreaCreator&quot;&gt;
      &lt;/client&gt;
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         The interface must implement the interface
 org.eclipse.papyrus.layouttool.LayouttoolInterface
The interfaceLayoutArea must implement the interface
 org.eclipse.papyrus.layouttool.LayoutToolAreaInterface
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
